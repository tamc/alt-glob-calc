<!DOCTYPE html>
<html>
<head>
<link href='http://fonts.googleapis.com/css?family=Muli' rel='stylesheet' type='text/css'>
<link href='http://fonts.googleapis.com/css?family=Josefin+Sans' rel='stylesheet' type='text/css'>

<!-- Probably always a good idea to be utf-8 -->
<meta charset="utf-8"> 
<!-- So iPads can view the app in full screen -->
<meta name="apple-mobile-web-app-capable" content="yes">
<!-- This prevents Internet Explorer from entering 'quirks' mode -->
<meta content='IE=edge' http-equiv='X-UA-Compatible'>
<!-- Change the title to one for your own country -->
<title>Global Calculator</title>
<!-- assets is a function definied in the Helper module in src/server.rb --> 
<link href='/assets/<%= assets['application.css']%>' media='screen' rel='stylesheet' type='text/css' />
<script src='/assets/<%= assets['application.js']%>' type='text/javascript'></script>
<style>
body {
  min-width: 1024px;
  max-width: 1400px;
  font-family: 'Muli', sans-serif;
  background: url(/assets/images/earth.jpg) #000 no-repeat;
  background-position-x: center;
}

.earth-image {
  background: url(/assets/images/earth.jpg) #000 no-repeat;
  background-position-x: center;
}

.crowd-image {
  background: url(/assets/images/crowd.jpg) #000 no-repeat;
  background-position-x: center;
}

.urban-image {
  background: url(/assets/images/urban.jpg) #000 no-repeat;
  background-position-x: center;
}

.distance-image {
  background: url(/assets/images/distance.jpg) #000 no-repeat;
  background-position-x: center;
}

h1, h2, h3, h4 {
  font-family: "Josefin Sans", sans-serif;
  line-height: 1;
  text-transform: uppercase; }

h1 {
  color: white;
  font-size: 2.5rem;
  margin-top: 10px;
}

h2 {
  color: white;
  font-size: 2rem;
  margin-top: 50px;
}

.highlight {
  background-color: rgba(255,0,0,0.65);
}

#title {
  position: fixed;
  left: 10px;
  top: 10px;
  color: white;
}

#title a, #jump a {
  color: white;
  text-decoration: none;
}

#title a:hover, #jump a:hover {
  text-decoration: underline;
}

#jump {
  position: fixed;
  color: white;
  top: 139px;
  left: 0px;
  padding: 10px;
  width: 200px;
  opacity: 0;
  background-color: rgba(0, 0, 0, 0.65);
}

#jump a {
  display: block;
}

#consequences {
  color: white;
  width: 200px;
  padding: 10px;
  height: 200px;
  position: fixed;
  right: 0px;
  top: 50px;
  background-color: rgba(0, 0, 0, 0.65);
}

#controls {
  position: relative;
  margin: 10px 220px;
  max-width: 880px;
}
.intro, .choice {
  margin-top: 20px;
  padding: 20px;
  background-color: rgba(255, 255, 255, 0.7);
}

#intro {
  padding-left: 10px;
  padding-top: 0px;
  margin-top: 0px;
  width: 400px;
  float: left;
}

#intro p {
  margin-top: 0px;
  margin-bottom: 9px;
}

#video {
  border: rgba(255,255,255,0.7) solid 1px;
  width: 415px;
  height: 315px;
  float: left;
}

.level {
  display: inline-block;
  width: 150px;
  height: 150px;
  margin: 5px;
  padding: 10px;
  border: solid 1px black;
  cursor: pointer;
  transition: background-color 0.5s ease;
  text-align: center;
}

.level:hover {
  border: solid 1px #f00;
}
  
</style>
</head>
<body>
<div id='title'><a href='http://www.globalcalculator.org'>The Global Calculator</a></div>
<div id='jump'>Quickly jump to:</div>
<div id='consequences'>
  <h3>Consequences</h3>
  <p>By 2100, it could be <span id='lowtemp'> </span>&ndash;<span id='hightemp'> </span>&deg;C warmer than pre-industrial times</p>
</div>
<div id='controls'>
  <h1>Live the dream / avoid climate change</h2>
  <div class='intro'>
    <div id='video'>
      <img src="/assets/images/play.png" alt="Play video" tabindex="0">
    </div>
    <div id='intro'>
      <p>Could we all live a dream lifestyle and yet avoid climate change? Even if there end up being 11 billion of us on this planet?</p>
      <p>The future is uncertain, but not completly. Below are a series of possibilities for the way we live, for the power stations we build, for the way we uses our land. They cover the extremes of what might happen.<p>
      <p>Choose the future you want and see the consequences on the right.</p>
      <p>If you don't like the consequences, make a different choice.</p>
      <p>If you like the consequences, <a href='#share'>go make your future happen</a>.</p>
    </div>
    <div style='clear:both'></div>
</div>
</div>
<div class='group'>
  <h2>Where next?</h2>
</div>

<script>
var choice_data;
var choices = [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1];
var implications;

function set_choice_to_level(choice_index, level) {
  choices[choice_index] = level;
  updateUrl();
  highLightChoices();
  loadImplications();
};

function updateUrl() {
  if(history['pushState'] == null) { return; }
  history.pushState(choices, code(), "/"+code());
}

function highLightChoices() {
  d3.selectAll('.highlight').classed('highlight', false);
  choices.forEach(function(level, choice_index) {
      d3.selectAll(".c"+choice_index+"l"+level).classed('highlight',true);
      });
};

function code() {
  return choices.join('');
};

function loadImplications() {
  d3.json("/"+code()+"/data", function(error, data) {
      if(error != undefined) {
        console.log("Error loading", error);
        return;
        };
        if(data.code == code()) {
          implications = data;
          updateImplications();
          }
      });
}

function openInComplexTool() {
  window.location = "http://tool.globalcalculator.org/glob-calc-v11.html?levers="+code().substr(0,57)+"/dashboard";;
};

var temperature_format = d3.format(".1f");

function updateImplications() {
  d3.select('#lowtemp').transition().text( temperature_format(implications.warming[1]));
  d3.select('#hightemp').transition().text(temperature_format(implications.warming[0]));
}
  

function load_choice_data(rows) {
  choice_data = d3.nest()
    .key(function(d) { return d.sector; })
    .entries(rows);
  draw_choices();
  highLightChoices();
};

function parse_choice_data(d) {
  var o = { index: +d.index, sector: d.sector, today: d.today, name: d.lever, interaction: d.interaction, limit: +d.limit, levels: [] };
  var i;
  for(i = 1; i <= o.limit; i++) {
    o.levels[i-1] = { index: o.index, level: i, text: d["level"+i]};
  };
  return o;
};

function draw_choices() {

  var groups = d3.select('#controls').selectAll('div.group')
      .data(choice_data);

  groups.enter().append('div')
      .attr('class', 'group')
    .append('h2')
      .attr('id', function(d) { return d.key.toLowerCase().replace(' ','-'); })
      .text(function(d) { return d.key; });

  var choices = groups.selectAll('div.choice')
    .data(function(d) { return d.values; });

  var new_choices = choices.enter().append('div')
    .attr('class', 'choice');

  new_choices.append('h3')
    .text(function(d) { return d.name; });

  new_choices.append('p')
    .text(function(d) { return d.today; });

  var levels = new_choices.append('div')
        .attr('class', 'levels')
      .selectAll('div.level')
        .data(function(d) { return d.levels;});

  levels.enter().append('div')
    .attr('class', function(d) { return "c"+d.index+"l"+d.level+' level'; })
    .html(function(d) { return d.text; })
    .on('click', function(d) {
      set_choice_to_level(d.index, d.level);
    });

  new_choices.append('p')
    .text(function(d) { return d.interaction; });


  // Draw the jump links
  groups = d3.select('#jump').selectAll('a')
    .data(choice_data);

  groups.enter().append('a')
    .attr('href', function(d) { return "#"+d.key.toLowerCase().replace(' ','-'); })
    .text(function(d) { return d.key; })

  d3.select('#jump')
    .on('mouseover', function() { d3.select('#jump').transition().attr('style', 'opacity: 1'); })
    .on('mouseout', function() { d3.select('#jump').transition().attr('style', 'opacity: 0'); })



}

// Do the changing background

var backgrounds = [
  'crowd',
  'urban',
  'distance',
  'distance',
  'distance'
];

var current_background = 'earth';

function onScroll() {
  var scrollTop = document.documentElement.scrollTop || document.body.scrollTop;
  var found = false;
  d3.selectAll('.choice').each(function(d) {
      distance = this.offsetTop-scrollTop;
      if(!found && distance > 0 && distance < 250) {
        changeBackround(backgrounds[d.index]);
        found = true;
        }
      });
  if(!found && scrollTop < 500) {
    changeBackround('earth');
  }
}

function changeBackround(new_background) {
  if( current_background == new_background ) { return; };
  console.log(new_background, current_background);
  var scrollTop = document.documentElement.scrollTop || document.body.scrollTop;
  d3.select("body")
    .classed(current_background+"-image", false)
    .classed(new_background+"-image", true)
    .attr('style', 'background-position-y:'+(scrollTop-250)+'px');
  current_background = new_background;
}

window.onscroll = onScroll;

var url_elements = window.location.pathname.split('/');
console.log(url_elements);
if(url_elements[1].length == 57) {
  choices = url_elements[1].split('');
}
d3.csv("/choices.csv", load_choice_data).row(parse_choice_data);
loadImplications();


</script>


</body>
</html>
